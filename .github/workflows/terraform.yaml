name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on:
 push:
   branches:
   - main
   paths:
   - terraform/**
 pull_request:
   branches:
   - main
   paths:
   - terraform/**

env:
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state
 TF_BUCKET: ${{ secrets.TF_BUCKET}}

jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./terraform


   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2
     - name: "Install Trivy"
       run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.tar.gz
        tar zxvf trivy_0.18.3_Linux-64bit.tar.gz
        sudo mv trivy /usr/local/bin/trivy
        rm trivy_0.18.3_Linux-64bit.tar.gz
     # - name: Run Trivy
     #   run: |
     #      trivy config ./example.tf
     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.7.1
     - name: Terraform init
       id: init
       run: terraform init -backend-config="bucket=$TF_BUCKET"
     - name: Terraform format
       id: fmt
       run: terraform fmt -check
     - name: Terraform validate
       id: validate
       run: terraform validate
     - name: Terraform plan
       id: plan
       if: github.event_name == 'pull_request'
       run: terraform plan -no-color -input=false
       continue-on-error: true

     - name: Terraform Plan Status
       if: steps.plan.outcome == 'failure'
       run: exit 1
     - name: Create diagram
       run: |
          sudo apt install graphviz
          terraform graph -type=plan | dot -Tpng >graph.png
     - name: Terraform Apply
       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
       run: terraform apply -auto-approve -input=false
